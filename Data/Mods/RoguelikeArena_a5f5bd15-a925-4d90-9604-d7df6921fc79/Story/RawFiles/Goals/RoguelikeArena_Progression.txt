Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
// Increases arena level and resets difficulty.
PROC
PROC_RoguelikeArena_ProgressArena()
AND
DB_RoguelikeArena_Singleton_CurrentDifficulty(_CurrentDifficulty)
AND
DB_RoguelikeArena_Singleton_MaxDifficulty(_MaxDifficulty)
AND
_CurrentDifficulty >= _MaxDifficulty
THEN
PROC_RoguelikeArena_IncreaseArenaLevel();
DB_RoguelikeArena_Singleton_CurrentDifficulty(0);

// Increases arena difficulty.
PROC
PROC_RoguelikeArena_ProgressArena()
AND
DB_RoguelikeArena_Singleton_CurrentDifficulty(_CurrentDifficulty)
AND
DB_RoguelikeArena_Singleton_MaxDifficulty(_MaxDifficulty)
AND
_CurrentDifficulty < _MaxDifficulty
THEN
PROC_RoguelikeArena_IncreaseArenaDifficulty();

PROC
PROC_RoguelikeArena_IncreaseArenaLevel()
AND
DB_RoguelikeArena_Singleton_CurrentLevel(_CurrentLevel)
AND
IntegerSum(_CurrentLevel, 1, _NextLevel)
AND
IntegerMin(_NextLevel, 35, _NextLevelCorrected)
THEN
DB_RoguelikeArena_Singleton_CurrentLevel(_NextLevelCorrected);

PROC
PROC_RoguelikeArena_IncreaseArenaDifficulty()
AND
DB_RoguelikeArena_Singleton_CurrentDifficulty(_CurrentDifficulty)
AND
IntegerSum(_CurrentDifficulty, 1, _NextDifficulty)
AND
DB_RoguelikeArena_Singleton_MinDifficulty(_MinDifficulty)
AND
IntegerMax(_NextDifficulty, _MinDifficulty, _NextDifficultyCorrected)
THEN
DB_RoguelikeArena_Singleton_CurrentDifficulty(_NextDifficultyCorrected);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "RoguelikeArena"
