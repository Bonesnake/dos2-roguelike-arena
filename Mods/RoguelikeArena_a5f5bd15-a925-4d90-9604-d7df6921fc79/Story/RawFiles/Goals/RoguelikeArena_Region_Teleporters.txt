Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_RoguelikeArena_RegionTeleporterTemplate("RoguelikeArena_Portal_b3fa8b47-a181-40e5-b33b-fdc92db7bec9");

// Direction, rotation, -X, -Z, +X, +Z
DB_RoguelikeArena_RegionTeleporterTransforms("west", 270.0, 4.0, 0.0, 0.0, 0.0);
DB_RoguelikeArena_RegionTeleporterTransforms("north", 0.0, 0.0, 0.0, 0.0, 4.0);
DB_RoguelikeArena_RegionTeleporterTransforms("east", 90.0, 0.0, 0.0, 4.0, 0.0);
DB_RoguelikeArena_RegionTeleporterTransforms("south", 180.0, 0.0, 4.0, 0.0, 0.0);
KBSECTION
IF
DB_RoguelikeArena_ActiveRegions(_Region, _Level, _Index)
THEN
PROC_RoguelikeArena_SpawnRegionTeleporters(_Region, _Level, _Index);

// Populates a region with teleporters.
PROC
PROC_RoguelikeArena_SpawnRegionTeleporters((INTEGER)_Region, (INTEGER)_Level, (INTEGER)_Index)
AND
DB_RoguelikeArena_SectionExitStates(_Region, _Section, _Trigger, _IsForward)
AND
DB_RoguelikeArena_SectionExits(_Region, _Section, (TRIGGERGUID)_Trigger, _Direction)
AND
GetPosition(_Trigger, _X, _Y, _Z)
AND
DB_RoguelikeArena_RegionTeleporterTransforms(_Direction, _Angle, _XSubtract, _ZSubtract, _XAdd, _ZAdd)
AND
RealSubtract(_X, _XSubtract, _XSubtracted)
AND
RealSubtract(_Z, _ZSubtract, _ZSubtracted)
AND
RealSum(_XSubtracted, _XAdd, _XTransformed)
AND
RealSum(_ZSubtracted, _ZAdd, _ZTransformed)
AND
DB_RoguelikeArena_RegionTeleporterTemplate(_Template)
AND
CreateItemTemplateAtPosition(_Template, _XTransformed, _Y, _ZTransformed, _Teleporter)
THEN
ItemRotateToAngleY(_Teleporter, _Angle, 10000.0);
PROC_RoguelikeArena_ItemSnapToGround(_Teleporter);
DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Teleporter, (TRIGGERGUID)_Trigger, _IsForward);
PROC_RoguelikeArena_RegisterForCleanup(_Teleporter, _Region);

// Registers backwards teleport items and triggers.
IF
DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Teleporter, _Trigger, 0)
AND
IntegerProduct(_Index, 2, _IndexDoubled)
AND
IntegerSubtract(_IndexDoubled, 2, _TeleporterId)
AND
IntegerSubtract(_IndexDoubled, 1, _TriggerId)
THEN
PROC_RoguelikeArena_RegisterTeleporterItem(_Teleporter, _TeleporterId);
PROC_RoguelikeArena_RegisterTeleporterTrigger(_Trigger, _TriggerId);

// Registers forward teleport items and triggers.
IF
DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Teleporter, _Trigger, 1)
AND
DB_RoguelikeArena_Singleton_RegionsPerLevel(_RegionsPerLevel)
AND
_Index < _RegionsPerLevel
AND
IntegerProduct(_Index, 2, _IndexDoubled)
AND
IntegerSum(_IndexDoubled, 1, _TeleporterId)
THEN
PROC_RoguelikeArena_RegisterTeleporterItem(_Teleporter, _TeleporterId);
PROC_RoguelikeArena_RegisterTeleporterTrigger(_Trigger, _IndexDoubled);

// Registers forward teleport items and triggers.
IF
DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Teleporter, _Trigger, 1)
AND
DB_RoguelikeArena_Singleton_RegionsPerLevel(_RegionsPerLevel)
AND
_Index >= _RegionsPerLevel
THEN
PROC_RoguelikeArena_RegisterTeleporterItem(_Teleporter, 0);

// Prepares the next region if needed.
IF
CharacterUsedItem(_Character, _Item)
AND
DB_RoguelikeArena_RegionTeleporters(_, _Index, _Item, _, 1)
AND
DB_RoguelikeArena_Singleton_RegionsPerLevel(_RegionsPerLevel)
AND
_Index < _RegionsPerLevel
AND
IntegerSum(_Index, 1, _NextIndex)
AND
NOT DB_RoguelikeArena_ActiveRegions(_, _, _NextIndex)
AND
DB_RoguelikeArena_Singleton_CurrentLevel(_Level)
THEN
PROC_RoguelikeArena_StartNewRegion(_Level);

// Removes teleporter from DB after removed from the game.
IF
DB_RoguelikeArena_RemovedItems(_Item)
AND
DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Item, _Trigger, _IsForward)
THEN
NOT DB_RoguelikeArena_RegionTeleporters(_Region, _Index, _Item, _Trigger, _IsForward);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "RoguelikeArena_Region"
