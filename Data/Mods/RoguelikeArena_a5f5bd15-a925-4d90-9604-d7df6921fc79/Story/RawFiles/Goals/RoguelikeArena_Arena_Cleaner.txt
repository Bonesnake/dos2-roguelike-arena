Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_RoguelikeArena_CleanupSources(1, (TRIGGERGUID)TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_abdbebbb-87fc-4354-a583-e3a5256e318e);
DB_RoguelikeArena_CleanupSources(1, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_3f9771b3-fefd-4d51-beee-9c290db367a8);
DB_RoguelikeArena_CleanupSources(1, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_002_5d576a02-9d1f-4638-996c-c4026080d973);

DB_RoguelikeArena_CleanupSources(2, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_c37c9abc-80de-407d-afff-78e8b6e3d4d5);
DB_RoguelikeArena_CleanupSources(2, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_5215bb40-44d6-4dfe-8a14-1501816bb223);
DB_RoguelikeArena_CleanupSources(2, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_002_56005bfe-0506-4263-9473-eea9304631f8);

DB_RoguelikeArena_CleanupSources(3, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_49203919-4035-4dd9-a987-b315f31d9f1b);
DB_RoguelikeArena_CleanupSources(3, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_e8da05b3-56b3-49ec-8477-61ab184fb85b);

DB_RoguelikeArena_CleanupSources(4, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_002_e819bceb-a043-4671-9e55-4de35ba473f5);
DB_RoguelikeArena_CleanupSources(4, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_003_05aa94ac-6568-4450-9632-9718cb9ade01);

DB_RoguelikeArena_CleanupSources(5, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_1171de7a-024a-48af-a676-54a905a6a2eb);
DB_RoguelikeArena_CleanupSources(5, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_6fb4f292-b646-4463-bf0b-37b1a3aae30d);

DB_RoguelikeArena_CleanupSources(6, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_31be1a64-6692-46d9-bd8b-6066b7d51fda);
DB_RoguelikeArena_CleanupSources(6, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_e49473eb-c2c0-407a-aefe-d9569584b0d8);
DB_RoguelikeArena_CleanupSources(6, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_002_0df4edbf-e845-43d8-bb75-085dbdd36dd4);

DB_RoguelikeArena_CleanupSources(7, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_000_2fb48461-a904-45bc-837d-d48114253ad8);
DB_RoguelikeArena_CleanupSources(7, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_001_ac7cb9a3-fe17-4d7d-9e38-6bd25a7bd812);
DB_RoguelikeArena_CleanupSources(7, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_002_ef62bd77-6859-46df-92df-961a7aa0462d);
DB_RoguelikeArena_CleanupSources(7, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_003_02169f95-e7ca-450a-aba9-81a0b97a66b7);
DB_RoguelikeArena_CleanupSources(7, TRIGGERGUID_RoguelikeArena_SurfaceCleanupTrigger_004_5255e0a4-db62-4e4b-a72a-cc2dd9e04487);

// Radius, from, to, offset.
// DB_RoguelikeArena_SurfaceCleanupParameters(64.0, -8, 8, 4.0);
KBSECTION
PROC
PROC_RoguelikeArena_ArenaEnded(_Arena, _Level, _Difficulty, _Players)
THEN
PROC_RoguelikeArena_CleanUp(_Arena);

// Cleans up the given arena.
PROC
PROC_RoguelikeArena_CleanUp((INTEGER)_Arena)
THEN
PROC_RoguelikeArena_CleanUpCharacters(_Arena);
PROC_RoguelikeArena_CleanUpItems(_Arena);
PROC_RoguelikeArena_CleanUpSurfaces(_Arena);

//REGION Clean up characters
// Kills and hides characters, then unregisters them from cleanup.
PROC
PROC_RoguelikeArena_CleanUpCharacters((INTEGER)_Arena)
AND
DB_RoguelikeArena_CleanupRegisteredObjects(_Character, _Arena)
AND
ObjectExists(_Character, 1)
AND
ObjectIsCharacter(_Character, 1)
THEN
PROC_RoguelikeArena_CharacterRemove((CHARACTERGUID)_Character);

// Kills and hides characters, then unregisters them from cleanup.
PROC
PROC_RoguelikeArena_CleanUpCharacters((INTEGER)_Arena)
AND
DB_RoguelikeArena_CleanupRegisteredObjects(_Character, _Arena)
AND
ObjectIsCharacter(_Character, 1)
THEN
PROC_RoguelikeArena_UnregisterFromCleanup(_Character);
//END_REGION

//REGION Clean up items
// Removes items from the game and unregisters them from cleanup.
PROC
PROC_RoguelikeArena_CleanUpItems((INTEGER)_Arena)
AND
DB_RoguelikeArena_CleanupRegisteredObjects(_Item, _Arena)
AND
ObjectExists(_Item, 1)
AND
ObjectIsItem(_Item, 1)
THEN
PROC_RoguelikeArena_ItemRemove((ITEMGUID)_Item);

// Removes items from the game and unregisters them from cleanup.
PROC
PROC_RoguelikeArena_CleanUpItems((INTEGER)_Arena)
AND
DB_RoguelikeArena_CleanupRegisteredObjects(_Item, _Arena)
AND
ObjectIsItem(_Item, 1)
THEN
PROC_RoguelikeArena_UnregisterFromCleanup(_Item);
//END_REGION

//REGION Clean up surfaces
PROC
PROC_RoguelikeArena_CleanUpSurfaces((INTEGER)_Arena)
AND
DB_RoguelikeArena_CleanupSources(_Arena, _Source)
THEN
RemoveSurfaceLayer(_Source, 0, 64.0);
RemoveSurfaceLayer(_Source, 1, 64.0);

// Does not seem to work on the level, but works on the region strangely.
// Cleans up surfaces. Surface cleanup has a very limited height, hence this proc runs the cleanup process on multiple y positions.
// PROC
// PROC_RoguelikeArena_CleanUpSurfaces((INTEGER)_Arena)
// AND
// DB_RoguelikeArena_CleanupSources(_Arena, _Source)
// AND
// GetPosition(_Source, _SourceX, _SourceY, _SourceZ)
// AND
// Integer(_SourceX, _SourceXInt)
// AND
// IntegertoString(_SourceXInt, _SourceXString)
// AND
// QRY_RoguelikeArena_DebugBreak(_SourceXString)
// AND
// Integer(_SourceZ, _SourceZInt)
// AND
// IntegertoString(_SourceZInt, _SourceZString)
// AND
// QRY_RoguelikeArena_DebugBreak(_SourceZString)
// AND
// DB_RoguelikeArena_SurfaceCleanupParameters(_Radius, _From, _To, _Offset)
// AND
// QRY_RoguelikeArena_CreateIndices(_From, _To)
// AND
// DB_RoguelikeArena_CreatedIndices(_Index)
// AND
// Real(_Index, _IndexReal)
// AND
// RealProduct(_Offset, _IndexReal, _OffsetY)
// AND
// RealSum(_SourceY, _OffsetY, _Y)
// THEN
// RemoveSurfaceLayerAtPosition(_SourceX, _Y, _SourceZ, 0, _Radius);
// RemoveSurfaceLayerAtPosition(_SourceX, _Y, _SourceZ, 1, _Radius);
//END_REGION

//REGION Manual cleanup registration
// Registers object for cleanup.
PROC
PROC_RoguelikeArena_RegisterForCleanup((GUIDSTRING)_Object, (INTEGER)_Arena)
AND
IsTagged(_Object, "IGNORE_CLEANUP", 0)
THEN
DB_RoguelikeArena_CleanupRegisteredObjects(_Object, _Arena);

// Unregisters object from cleanup.
PROC
PROC_RoguelikeArena_UnregisterFromCleanup((GUIDSTRING)_Object)
AND
IsTagged(_Object, "IGNORE_CLEANUP", 0)
AND
DB_RoguelikeArena_CleanupRegisteredObjects(_Object, _Arena)
THEN
NOT DB_RoguelikeArena_CleanupRegisteredObjects(_Object, _Arena);
//END_REGION

//REGION Automatic cleanup registration
// Registers dropped items for cleanup.
IF
ItemDropped(_Item)
AND
DB_RoguelikeArena_Arenas(_Arena)
AND
QRY_RoguelikeArena_ObjectIsInArena(_Item, _Arena)
THEN
PROC_RoguelikeArena_RegisterForCleanup(_Item, _Arena);

// Unregisters dropped items from cleanup if they are picked up.
IF
ItemAddedToCharacter(_Item, _)
THEN
PROC_RoguelikeArena_UnregisterFromCleanup(_Item);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "RoguelikeArena_Arena"
