Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_RoguelikeAdventure_DummyWaypoint((ITEMGUID)ITEMGUID_RoguelikeAdventure_DummyWaypointShrine_9eaee17e-7584-4a39-b0f4-1e82e000c395, (TRIGGERGUID)TRIGGERGUID_RoguelikeAdventure_DummyWaypointTrigger_6b826524-26b3-4615-b717-97053e0d4fc4);

DB_RoguelikeAdventure_AvailableWaypointShrines((ITEMGUID)ITEMGUID_RoguelikeAdventure_WaypointShrine_000_62bbc3f0-1310-4ddb-90fa-b24b33a3de1c);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_001_8bea823e-d5f9-46b9-a3c4-c7002e47aa41);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_002_f1736c7e-3c13-4872-8abd-291c6a0f6a21);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_003_2ec7b50d-b602-42cf-853c-f3946822a538);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_004_731b9786-e281-40c8-92de-7c4323a6be2e);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_005_9790a89a-4111-4932-a250-230c0ae8c810);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_006_d077bf40-5037-4903-8fc8-3a573e057694);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_007_eb027607-dfa2-4695-a587-44fea48ecb6c);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_008_8a9e9b80-8809-4e38-a5ab-72bf32a5ff7a);
DB_RoguelikeAdventure_AvailableWaypointShrines(ITEMGUID_RoguelikeAdventure_WaypointShrine_009_a81cac70-13d3-41a8-98ec-b1957f2f2829);

// Direction, rotation, -X, -Z, +X, +Z
DB_RoguelikeAdventure_WaypointShrineTransforms("west", 0.0, 0.0, 0.0, 0.0, 4.0);
DB_RoguelikeAdventure_WaypointShrineTransforms("north", 90.0, 0.0, 0.0, 4.0, 0.0);
DB_RoguelikeAdventure_WaypointShrineTransforms("east", 180.0, 0.0, 4.0, 0.0, 0.0);
DB_RoguelikeAdventure_WaypointShrineTransforms("south", 270.0, 4.0, 0.0, 0.0, 0.0);

PROC_RoguelikeAdventure_InitWaypoints();
PROC_RoguelikeAdventure_GuidStringPoolAddAvailableWaypointShrines();
KBSECTION
PROC
PROC_RoguelikeAdventure_InitWaypoints()
AND
DB_RoguelikeAdventure_AvailableWaypointShrines(_Shrine)
THEN
SetOnStage(_Shrine, 0);

IF
DB_RoguelikeAdventure_ActiveRegions(_Region, _, _Index)
THEN
PROC_RoguelikeAdventure_SpawnWaypointShrine(_Region, _Index);

IF
DB_RoguelikeAdventure_ActiveRegionsHelper(_Region, _Level, _Index)
AND
NOT DB_RoguelikeAdventure_ActiveRegions(_Region, _Level, _Index)
THEN
PROC_RoguelikeAdventure_LockWaypoint(_Region);

PROC
PROC_RoguelikeAdventure_SpawnWaypointShrine((INTEGER)_Region, (INTEGER)_Index)
AND
DB_RoguelikeAdventure_SectionExitStates(_Region, _Section, _Trigger, 0)
AND
DB_RoguelikeAdventure_SectionExits(_Region, _Section, (TRIGGERGUID)_Trigger, _Direction)
AND
GetPosition(_Trigger, _X, _Y, _Z)
AND
DB_RoguelikeAdventure_WaypointShrineTransforms(_Direction, _Angle, _XSubtract, _ZSubtract, _XAdd, _ZAdd)
AND
RealSubtract(_X, _XSubtract, _XSubtracted)
AND
RealSubtract(_Z, _ZSubtract, _ZSubtracted)
AND
RealSum(_XSubtracted, _XAdd, _XTransformed)
AND
RealSum(_ZSubtracted, _ZAdd, _ZTransformed)
AND
QRY_RoguelikeAdventure_GuidStringPoolSelectAndRemoveRandom("AvailableWaypointShrinePool")
AND
DB_RoguelikeAdventure_GuidStringPoolSelectedValue("AvailableWaypointShrinePool", _Shrine)
THEN
TeleportToPosition(_Shrine, _XTransformed, _Y, _ZTransformed, "", 0);
ItemRotateToAngleY((ITEMGUID)_Shrine, _Angle, 10000.0);
DB_RoguelikeAdventure_WaypointShrines(_Region, _Index, (ITEMGUID)_Shrine, (TRIGGERGUID)_Trigger);

IF
DB_RoguelikeAdventure_WaypointShrines(_Region, _Index, _, _)
THEN
PROC_RoguelikeAdventure_UnlockWaypoint(_Region, _Index);

// Unlocks and enables a waypoint.
PROC
PROC_RoguelikeAdventure_UnlockWaypoint((INTEGER)_Region, (INTEGER)_Index)
AND
DB_RoguelikeAdventure_WaypointShrines(_Region, _, _Shrine, _Trigger)
AND
IntegertoString(_Index, _IndexString)
AND
StringConcatenate(_IndexString, ". Region ", _WaypointName)
THEN
PROC_RoguelikeAdventure_CreateDummyWaypointAnchor(_WaypointName);
SetOnStage(_Shrine, 1);
DB_WaypointInfo(_Shrine, _Trigger, _WaypointName);

// Locks and disables a waypoint.
PROC
PROC_RoguelikeAdventure_LockWaypoint((INTEGER)_Region)
AND
DB_RoguelikeAdventure_WaypointShrines(_Region, _Index, _Shrine, _Trigger)
AND
DB_WaypointInfo(_Shrine, _Trigger, _Name)
THEN
PROC_LockWaypointForAll(_Name);
SetOnStage(_Shrine, 0);
NOT DB_WaypointInfo(_Shrine, _Trigger, _Name);
PROC_RoguelikeAdventure_GuidStringPoolAdd("AvailableWaypointShrinePool", _Shrine);
NOT DB_RoguelikeAdventure_WaypointShrines(_Region, _Index, _Shrine, _Trigger);

// Unlocks a fake waypoint to prevent the map anchor from being registered to region waypoints. This solves an issue with dynamic waypoint naming.
PROC
PROC_RoguelikeAdventure_CreateDummyWaypointAnchor((STRING)_WaypointName)
AND
DB_RoguelikeAdventure_DummyWaypoint(_Shrine, _Trigger)
THEN
DB_WaypointInfo(_Shrine, _Trigger, _WaypointName);
PROC_LockWaypointForAll(_WaypointName);
NOT DB_WaypointInfo(_Shrine, _Trigger, _WaypointName);

PROC
PROC_RoguelikeAdventure_GuidStringPoolAddAvailableWaypointShrines()
AND
DB_RoguelikeAdventure_AvailableWaypointShrines(_Shrine)
THEN
PROC_RoguelikeAdventure_GuidStringPoolAdd("AvailableWaypointShrinePool", _Shrine);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "RoguelikeAdventure_Region"
