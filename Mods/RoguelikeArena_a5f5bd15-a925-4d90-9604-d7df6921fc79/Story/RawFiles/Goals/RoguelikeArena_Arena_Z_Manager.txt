Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_RoguelikeArena_Arenas(1);
DB_RoguelikeArena_Arenas(2);
DB_RoguelikeArena_Arenas(3);
DB_RoguelikeArena_Arenas(4);
DB_RoguelikeArena_Arenas(5);
DB_RoguelikeArena_Arenas(6);
DB_RoguelikeArena_Arenas(7);

DB_RoguelikeArena_RegionTeleportTriggers(1, TRIGGERGUID_TeleportTrigger_050_0b7e3d3b-f4dd-4224-ba90-e1c70155d1b2);
DB_RoguelikeArena_RegionTeleportTriggers(2, TRIGGERGUID_TeleportTrigger_050__000_0d9c127b-19e5-8146-3ce9-5d92b2eab955);
DB_RoguelikeArena_RegionTeleportTriggers(3, TRIGGERGUID_TeleportTrigger_050__000_3f7aab4a-9cf0-8a9d-3ba9-90d30fab0305);
DB_RoguelikeArena_RegionTeleportTriggers(4, TRIGGERGUID_TeleportTrigger_050__000_3710181b-e09f-8c01-4fef-f65c4f04d25e);
DB_RoguelikeArena_RegionTeleportTriggers(5, TRIGGERGUID_TeleportTrigger_050__000_f7275a08-5777-8896-3c21-14597a6f26b5);
DB_RoguelikeArena_RegionTeleportTriggers(6, TRIGGERGUID_TeleportTrigger_050__000_e26fc78e-823e-895f-6c6d-5798099e0592);
DB_RoguelikeArena_RegionTeleportTriggers(7, TRIGGERGUID_TeleportTrigger_050__000_d0e0eb9a-07f6-867b-4ca2-f0237a0c12b8);

DB_RoguelikeArena_ArenaEventTriggers(1, (TRIGGERGUID)TRIGGERGUID_EventTrigger_000_c5d2c42e-28d9-4c92-87e9-fb0c9ecc4e11);
DB_RoguelikeArena_ArenaEventTriggers(2, TRIGGERGUID_EventTrigger_000__000_c1326444-366d-85f5-2534-2937d02c3bd9);
DB_RoguelikeArena_ArenaEventTriggers(3, TRIGGERGUID_EventTrigger_000__000_f310fd13-b978-8e4c-24f4-6c782ded8589);
DB_RoguelikeArena_ArenaEventTriggers(4, TRIGGERGUID_EventTrigger_000__000_fbb66ae4-0d17-80b0-383a-c2f16d4654d2);
DB_RoguelikeArena_ArenaEventTriggers(5, TRIGGERGUID_EventTrigger_000__000_bbcdacd1-74ff-8c45-257c-e0fe98a1a839);
DB_RoguelikeArena_ArenaEventTriggers(6, TRIGGERGUID_EventTrigger_000__000_a6051957-afb6-8d0e-55b8-233d27d08716);
DB_RoguelikeArena_ArenaEventTriggers(7, TRIGGERGUID_EventTrigger_000__000_94863d63-247e-8a2a-35fd-ccc8984e943c);

PROC_RoguelikeArena_IntegerPoolAddArenas();
GlobalSetFlag("RoguelikeArena_FirstChallenge");
KBSECTION
// Removes the active arena from the DB.
PROC
PROC_RoguelikeArena_ResetActiveArena()
AND
DB_RoguelikeArena_ActiveArena(_Arena, _Level, _Difficulty, _Players)
THEN
NOT DB_RoguelikeArena_ActiveArena(_Arena, _Level, _Difficulty, _Players);
PROC_RoguelikeArena_ArenaEnded(_Arena, _Level, _Difficulty, _Players);

PROC
PROC_RoguelikeArena_ArenaEnded((INTEGER)_Arena, (INTEGER)_Level, (INTEGER)_Difficulty, (INTEGER)_Players)
THEN
DB_NOOP(1);

// Selects a new arena and prepares it for population.
PROC
PROC_RoguelikeArena_StartNewArena((INTEGER)_Level, (INTEGER)_Difficulty)
AND
QRY_RoguelikeArena_IntegerPoolSelectRandom("ArenaPool")
AND
DB_RoguelikeArena_IntegerPoolSelectedValue("ArenaPool", _Arena)
AND
QRY_RoguelikeArena_UpdatePlayerCount()
AND
DB_Singleton("RoguelikeArena_PlayerCount", _Players)
THEN
DB_RoguelikeArena_ActiveArena(_Arena, _Level, _Difficulty, _Players);
PROC_RoguelikeArena_ArenaStarted(_Arena, _Level, _Difficulty, _Players);

PROC
PROC_RoguelikeArena_ArenaStarted((INTEGER)_Arena, (INTEGER)_Level, (INTEGER)_Difficulty, (INTEGER)_Players)
THEN
DB_NOOP(1);

QRY
QRY_RoguelikeArena_UpdatePlayerCount()
THEN
DB_Singleton("RoguelikeArena_PlayerCount", 0);

QRY
QRY_RoguelikeArena_UpdatePlayerCount()
AND
DB_IsPlayer(_Player)
AND
CharacterIsSummon(_Player, 0)
AND
DB_Singleton("RoguelikeArena_PlayerCount", _PlayerCount)
AND
IntegerSum(_PlayerCount, 1, _PlayerCountIncreased)
AND
CharacterHasTalent(_Player, "LoneWolf", _HasLoneWolf)
AND
IntegerSum(_PlayerCountIncreased, _HasLoneWolf, _NewPlayerCount)
THEN
DB_Singleton("RoguelikeArena_PlayerCount", _NewPlayerCount);

// Adds available arenas to the arena pool.
PROC
PROC_RoguelikeArena_IntegerPoolAddArenas()
AND
DB_RoguelikeArena_Arenas(_Arena)
THEN
PROC_RoguelikeArena_IntegerPoolAdd("ArenaPool", _Arena);

PROC
PROC_RoguelikeArena_ArenaStarted(_, _, _, _)
THEN
GlobalClearFlag("RoguelikeArena_FirstChallenge");
GlobalClearFlag("RoguelikeArena_ActiveChallengeComplete");

PROC
PROC_RoguelikeArena_ArenaCombatEnded(_, _, _, _)
THEN
GlobalSetFlag("RoguelikeArena_ActiveChallengeComplete");

IF
CharacterEnteredTrigger(_, _Trigger)
AND
DB_RoguelikeArena_ArenaEventTriggers(_Arena, _Trigger)
AND
DB_RoguelikeArena_ActiveArena(_Arena, _, _, _)
THEN
GlobalSetFlag("RoguelikeArena_ActiveArenaOccupied");

IF
CharacterLeftTrigger(_, _Trigger)
AND
NOT DB_InRegion(_, _Trigger)
THEN
GlobalClearFlag("RoguelikeArena_ActiveArenaOccupied");

QRY
QRY_RoguelikeArena_ObjectIsInArena((GUIDSTRING)_Object)
AND
DB_RoguelikeArena_Arenas(_Arena)
AND
QRY_RoguelikeArena_ObjectIsInArena(_Object, _Arena)
THEN
DB_NOOP(1);

QRY
QRY_RoguelikeArena_ObjectIsInArena((GUIDSTRING)_Object, (INTEGER)_Arena)
AND
DB_RoguelikeArena_ArenaEventTriggers(_Arena, _Trigger)
AND
ObjectIsInTrigger(_Object, _Trigger, 1)
THEN
DB_NOOP(1);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "RoguelikeArena_Arena"
